Репозиторий — папка с файлами вашего проекта на сервере GitHub. Так вы можете работать с 
проектом откуда угодно, не переживая, что какие-то файлы потеряются — все данные останутся в репозитории.

Если над проектом работает несколько программистов, сначала создаётся мастер-
репозиторий — это общий репозиторий с рабочей версией проекта. А каждый программист работает с 
форком — то есть полной копией мастер-репозитория. В форке вы можете безнаказанно менять код и не бояться что-то сломать в основной версии проекта.

Клонируем форк на компьютер — git clone
Клонировать форк — значит скачать его, чтобы работать с кодом на своём компьютере. Тут нам и пригодится SSH.

Открываем терминал и переходим в папку с будущим проектом — для этого используем команду 

    cd "любое место на компьютере"
    git clone git@github.com:Ваш репозиторий по SSH

Создаём новую ветку — git branch

Ветки нужны, чтобы несколько программистов могли вести работу над одним и тем же проектом или даже файлом одновременно, 
при этом не мешая друг другу. Кроме того, ветки используются для тестирования экспериментальных функций: 
чтобы не повредить основному проекту, создается новая ветка специально для экспериментов.

Откройте терминал и введите команду

    git branch

Она показывает список веток, с которыми мы работаем в проекте, и выделяет текущую. Если мы находимся в main, 
то создаём новую ветку командой

    git checkout -b имя-новой-ветки.

Чтобы отправить текущую ветку и установить внешнюю ветку как вышестоящую для этой ветки, используйте

    git push --set-upstream origin (имя ветки)

Если текущая ветка не main, переключитесь на неё с помощью команды checkout. После git checkout надо указать название нужной ветки.

    git checkout main

Мы делаем это, чтобы новая ветка содержала свежую рабочую версию проекта. Если вы о
шиблись в названии, например, допустили опечатку, вы можете изменить название ветки с помощью команды:

    git branch -m старое-имя-ветки новое-имя-ветки.



